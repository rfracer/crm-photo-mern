import { faker } from '@faker-js/faker';

describe('Auth test', () => {
  beforeEach(() => {
    cy.clearCookies();
    cy.visit('/');
  });

  it('Should redirect user to login page', () => {
    cy.findByRole('heading', { name: /login/i }).should('exist');
  });

  it('Should display errors message when user dont type email and password', () => {
    cy.findByRole('button', { name: /login/i }).click();
    cy.findByText(/Enter e-mail/i).should('exist');
    cy.findByText(/Enter password/i).should('exist');
  });

  it('Should allow user to login with correct credentials and get JWT Token in Cookie', () => {
    cy.findByRole('heading', { name: /login/i }).should('exist');

    cy.findByLabelText(/e-mail/i)
      .click()
      .type('test@test.pl');

    cy.findByLabelText(/password/i)
      .click()
      .type('12345');

    cy.findByRole('button', { name: /login/i }).click();

    cy.scrollTo(0, 0);
    cy.findByRole('heading', { name: /dashboard/i }).should('exist');

    //Check if JWT token is generated by backend
    cy.getCookie('JWT').should('exist');
  });

  it('Try to register already exist user', () => {
    cy.findByRole('link', { name: /sing up/i }).click();
    cy.findByLabelText(/e-mail/i)
      .click()
      .type('test@test.pl');
    cy.get('label')
      .contains(/password/i)
      .click()
      .type('12345');
    cy.findByLabelText(/Confirm password/i)
      .click()
      .type('12345');

    cy.findByRole('button', { name: /register/i }).click();

    cy.findByText(/exists/i).should('exist');
  });

  it('Should create account - redirect to login and display success message. Then user can login with this account', () => {
    const userEmail = faker.internet.email();
    const password = faker.internet.password();

    cy.findByRole('link', { name: /sing up/i }).click();
    cy.findByLabelText(/e-mail/i)
      .click()
      .type(userEmail);
    cy.get('label')
      .contains(/password/i)
      .click()
      .type(password);
    cy.findByLabelText(/Confirm password/i)
      .click()
      .type(password);
    cy.findByRole('button', { name: /register/i }).click();
    cy.findByText(/user created successfully/i).should('exist');
    cy.findByRole('heading', { name: /login/i }).should('exist');

    cy.findByLabelText(/e-mail/i)
      .click()
      .type(userEmail);
    cy.findByLabelText(/password/i)
      .click()
      .type(password);
    cy.findByRole('button', { name: /login/i }).click();

    cy.findByRole('heading', { name: /dashboard/i }).should('exist');
  });
});
